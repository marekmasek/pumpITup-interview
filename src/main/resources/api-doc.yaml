openapi: 3.0.0
info:
  title: E-Shop API
  description: API for e-shop
  version: 1.0.0
servers:
  - url: http://localhost:8182/api/v1
tags:
  - name: Management
    description: Manage inventory
  - name: Orders
    description: Manage orders
paths:
  /categories:
    get:
      summary: Get all categories
      tags:
        - Management
      operationId: getCategories
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryDto'
    post:
      summary: Create a new category
      tags:
        - Management
      operationId: createCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDto'
  /items:
    get:
      summary: Get all items
      tags:
        - Management
      operationId: getItems
      responses:
        '200':
          description: List of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemDto'
    post:
      summary: Create a new item
      tags:
        - Management
      operationId: createItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDto'
      responses:
        '201':
          description: Item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDto'
  /items/{itemId}/itemtypes:
    get:
      summary: Get all item types for a specific item
      tags:
        - Management
      operationId: getItemTypesForItem
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
            format: int64
            description: The ID of the item for which to retrieve item types
      responses:
        '200':
          description: List of item types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemTypeDto'
    post:
      summary: Create a new item type for a specific item
      tags:
        - Management
      operationId: createItemTypeForItem
      parameters:
        - in: path
          name: itemId
          required: true
          schema:
            type: integer
            format: int64
            description: The ID of the item for which to create item type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemTypeDto'
      responses:
        '201':
          description: Item type created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemTypeDto'
  /orders:
    post:
      summary: Create a new order
      tags:
        - Orders
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '200':
          description: >
            The order was successfully received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
components:
  schemas:
    CategoryDto:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: The unique identifier for the category
          readOnly: true
          example: 1
        name:
          type: string
    ItemDto:
      type: object
      required:
        - id
        - name
        - categoryId
      properties:
        id:
          type: integer
          format: int64
          description: The unique identifier for the item
          readOnly: true
          example: 1
        name:
          type: string
          description: The name of the item
        categoryId:
          type: integer
          format: int64
          description: The ID of the category to which the item belongs
    ItemTypeDto:
      type: object
      required:
        - id
        - configurations
      properties:
        id:
          type: integer
          format: int64
          description: The unique identifier for the item type
          readOnly: true
          example: 1
        configurations:
          $ref: '#/components/schemas/Configurations'
    OrderDto:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          minItems: 1
          items:
            type: object
            required:
              - itemId
            properties:
              itemId:
                type: integer
                format: int64
              configurations:
                $ref: '#/components/schemas/Configurations'
    Configurations:
      type: object
      additionalProperties:
        type: string
      example:
        color: "Red"
        size: "M"
    OrderResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Message indicating the outcome of the order placement
